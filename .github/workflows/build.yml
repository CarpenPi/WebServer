name: Build Carpenpi image
on: [push,release]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Change these when updating to new version of raspberry pi OS
      IMG_URL: https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2021-01-12/2021-01-11-raspios-buster-armhf-lite.zip
      PI_ZIP: 2021-01-11-raspios-buster-armhf-lite.zip
      PI_ZIP_CHECKSUM: d49d6fab1b8e533f7efc40416e98ec16019b9c034bc89c59b83d0921c2aefeef
      PI_IMG: 2021-01-11-raspios-buster-armhf-lite.img
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          path: checkout
      - name: Cache base image
        id: cache-image
        uses: actions/cache@v2
        with:
          path: ${{ env.PI_IMG }}.orig
          key: ${{ env.PI_IMG }}.orig
      - name: Download base image
        if: steps.cache-image.outputs.cache-hit != 'true'
        run: |
          wget --quiet ${{ env.IMG_URL }}
          echo "${{ env.PI_ZIP_CHECKSUM }} ${{ env.PI_ZIP }}" | sha256sum -c
          unzip ${{ env.PI_ZIP }}
          mv ${{ env.PI_IMG }} ${{ env.PI_IMG }}.orig
      - name: Create clean base image
        run: cp ${{ env.PI_IMG }}.orig ${{ env.PI_IMG }}
      - name: Mount image
        id: mount-image
        uses: damianperera/mount-image-action@v1
        with:
          imagePath: ${{ env.PI_IMG }}
          mountPoint: /mnt/pi
      - name: Enable ssh in boot sector
        run: sudo touch /mnt/pi/boot/ssh
      - name: Unmount image
        uses: damianperera/unmount-image-action@v1
        with:
          imagePath: ${{ env.PI_IMG }}
          bootDeviceMapper: ${{ steps.mount-image.outputs.bootDeviceMapper }}
          rootDeviceMapper: ${{ steps.mount-image.outputs.rootDeviceMapper }}
      - name: Install QEMU
        run: sudo apt-get install -y qemu-system-arm qemu-efi
      - name: Checkout qemu pi kernels
        uses: actions/checkout@v2
        with:
          repository: dhruvvyas90/qemu-rpi-kernel
          path: qemu-rpi-kernel
      - name: Create QEMU config
        run: |
          touch /tmp/qemu.conf
          echo "PWD="$(pwd) >> /tmp/qemu.conf
          echo "PI_IMG="${{ env.PI_IMG }} >> /tmp/qemu.conf
      - name: Run QEMU as a service
        run: |
          loginctl enable-linger runner
          sleep 1
          ls /run/user/$UID 
          mkdir -p $HOME/.config/systemd/user
          cp checkout/test/start_qemu.sh /tmp
          cp checkout/test/qemu.service $HOME/.config/systemd/user
          XDG_RUNTIME_DIR=/run/user/$UID systemctl --user enable --now qemu.service
          #while true; do nc localhost 5022; ssh pi@localhost -p 5022; sleep 10; done
          #until bash ./checkout/test/ssh_alive_check.sh localhost 5022; do sleep 10; done
          sleep 30
        continue-on-error: true
        timeout-minutes: 10
      - name: Debug systemd
        run: |
          loginctl enable-linger runner
          sleep 1
          ls /run/user/$UID 
          cat /tmp/qemu.log
          XDG_RUNTIME_DIR=/run/user/$UID systemctl --user status qemu.service
          exit -1
      - name: Login to pi and run carpenpi install
        uses: appleboy/ssh-action@master
        with:
          host: localhost
          username: pi
          password: raspberry
          port: 5022
          script: whoami
